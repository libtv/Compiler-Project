using System;
using System.Collections.Generic;
using System.Text;
using System.Collections;
using System.IO;

namespace IISPLParserGenerator
{
   public class CalcScanner : IISPLParserGenerator.IISPLLexicalAnalyzer 
    {
       

/*
Lex source code for a simple calculator
File ame : CalcScanner1.lex
Tokens : + - * / CR ( ) NUM
*/
public void Test(string fn)
{
    install(fn);
    do {
        string token=(string)lexan();
        Console.WriteLine(token+"\t"+(token=="NUM"?yyoval:""));
    }
    while(!IsDone());
}
   protected override object Actions(int state)
   {
      switch (state)
       {
                  case 1:
                  case 2:{ return "WS";}; break;
                  case 3:
                  case 7:
                  case 10:
                  case 11:{ yyoval=float.Parse(lexbuf); return "NUM";}; break;
                  case 4:{ return "CR"; }; break;
                  case 5:{ return lexbuf; }; break;
                  case 6:{ return "WS"; }; break;
                  default : return null;
        }
   }
    protected override void Install()
    {
           trans=new int[,]{
             {0,1,'\t'},
             {0,4,'\n'},
             {0,2,'\r'},
             {0,6,' '},
             {0,6,'!'},
             {0,6,'"'},
             {0,6,'#'},
             {0,6,'$'},
             {0,6,'%'},
             {0,6,'&'},
             {0,6,'\''},
             {0,5,'('},
             {0,5,')'},
             {0,5,'*'},
             {0,5,'+'},
             {0,6,','},
             {0,5,'-'},
             {0,6,'.'},
             {0,5,'/'},
             {0,3,'0'},
             {0,3,'1'},
             {0,3,'2'},
             {0,3,'3'},
             {0,3,'4'},
             {0,3,'5'},
             {0,3,'6'},
             {0,3,'7'},
             {0,3,'8'},
             {0,3,'9'},
             {0,6,':'},
             {0,6,';'},
             {0,6,'<'},
             {0,6,'='},
             {0,6,'>'},
             {0,6,'?'},
             {0,6,'@'},
             {0,6,'A'},
             {0,6,'B'},
             {0,6,'C'},
             {0,6,'D'},
             {0,6,'E'},
             {0,6,'F'},
             {0,6,'G'},
             {0,6,'H'},
             {0,6,'I'},
             {0,6,'J'},
             {0,6,'K'},
             {0,6,'L'},
             {0,6,'M'},
             {0,6,'N'},
             {0,6,'O'},
             {0,6,'P'},
             {0,6,'Q'},
             {0,6,'R'},
             {0,6,'S'},
             {0,6,'T'},
             {0,6,'U'},
             {0,6,'V'},
             {0,6,'W'},
             {0,6,'X'},
             {0,6,'Y'},
             {0,6,'Z'},
             {0,6,'['},
             {0,6,'\\'},
             {0,6,']'},
             {0,6,'^'},
             {0,6,'_'},
             {0,6,'`'},
             {0,6,'a'},
             {0,6,'b'},
             {0,6,'c'},
             {0,6,'d'},
             {0,6,'e'},
             {0,6,'f'},
             {0,6,'g'},
             {0,6,'h'},
             {0,6,'i'},
             {0,6,'j'},
             {0,6,'k'},
             {0,6,'l'},
             {0,6,'m'},
             {0,6,'n'},
             {0,6,'o'},
             {0,6,'p'},
             {0,6,'q'},
             {0,6,'r'},
             {0,6,'s'},
             {0,6,'t'},
             {0,6,'u'},
             {0,6,'v'},
             {0,6,'w'},
             {0,6,'x'},
             {0,6,'y'},
             {0,6,'z'},
             {0,6,'{'},
             {0,6,'|'},
             {0,6,'}'},
             {0,6,'~'},
             {0,6,''},
             {1,2,'\t'},
             {1,2,'\r'},
             {2,2,'\t'},
             {2,2,'\r'},
             {3,8,'.'},
             {3,7,'0'},
             {3,7,'1'},
             {3,7,'2'},
             {3,7,'3'},
             {3,7,'4'},
             {3,7,'5'},
             {3,7,'6'},
             {3,7,'7'},
             {3,7,'8'},
             {3,7,'9'},
             {3,9,'E'},
             {7,8,'.'},
             {7,7,'0'},
             {7,7,'1'},
             {7,7,'2'},
             {7,7,'3'},
             {7,7,'4'},
             {7,7,'5'},
             {7,7,'6'},
             {7,7,'7'},
             {7,7,'8'},
             {7,7,'9'},
             {7,9,'E'},
             {8,10,'0'},
             {8,10,'1'},
             {8,10,'2'},
             {8,10,'3'},
             {8,10,'4'},
             {8,10,'5'},
             {8,10,'6'},
             {8,10,'7'},
             {8,10,'8'},
             {8,10,'9'},
             {9,12,'+'},
             {9,12,'-'},
             {9,11,'0'},
             {9,11,'1'},
             {9,11,'2'},
             {9,11,'3'},
             {9,11,'4'},
             {9,11,'5'},
             {9,11,'6'},
             {9,11,'7'},
             {9,11,'8'},
             {9,11,'9'},
             {10,10,'0'},
             {10,10,'1'},
             {10,10,'2'},
             {10,10,'3'},
             {10,10,'4'},
             {10,10,'5'},
             {10,10,'6'},
             {10,10,'7'},
             {10,10,'8'},
             {10,10,'9'},
             {10,9,'E'},
             {11,11,'0'},
             {11,11,'1'},
             {11,11,'2'},
             {11,11,'3'},
             {11,11,'4'},
             {11,11,'5'},
             {11,11,'6'},
             {11,11,'7'},
             {11,11,'8'},
             {11,11,'9'},
             {12,11,'0'},
             {12,11,'1'},
             {12,11,'2'},
             {12,11,'3'},
             {12,11,'4'},
             {12,11,'5'},
             {12,11,'6'},
             {12,11,'7'},
             {12,11,'8'},
            {12,11,'9'}};
            FinalStates=new int[]{1,2,3,7,10,11,4,5,1,3,5,6};
            Lookaheads=new string[]{"1,2;;","3,7,10,11;;","4;;","5;;","1,3,5,6;;"};                
       }
    }
}